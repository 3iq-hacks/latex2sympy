











1.25


MATH 225 Assignment 7
    Curtis Kan
    2022-03-17
=====================





§ QUESTION 1



 §.§ 1.

A. T(f(X)) = a times X to the power 2 + b times X + c = a times opening bracket 2 times X + 1 closing bracket to the power 2 + b times opening bracket 2 times X + 1 closing bracket + c = a times opening bracket 4 times X to the power 2 + 4 times X + 1 closing bracket + 2 times b times X + b + c 
 = opening bracket 4 times a closing bracket times X to the power 2 + opening bracket 4 times a + 2 times b closing bracket times X + opening bracket a + b + c closing bracket

a times X to the power 2 + b times X + c = opening bracket 4 times a closing bracket times X to the power 2 + opening bracket 4 times a + 2 times b closing bracket times X + opening bracket a + b + c closing bracket

Let's use the standard basis for **Error** and make a matrix for T:

T(1) = 1 = 1 times 1 + 0 times X + 0 times opening bracket X to the power 2 closing bracket 

*Error**

*Error**


MatrixSymbol(Str('T'), Integer(1), Integer(13))

 geometric multiplicity = 3, algebraic multiplicity  = 3

B. **Error**

C. Diagonalizable since g times E times o = a times l times g

D. **Error**

MatrixSymbol(Str('T'), Integer(1), Integer(13))


 §.§ 2.

A. T(f(X)) = a times X to the power 2 + b times X + c

f(X) = a times opening bracket X + 1 closing bracket to the power 2 + b times opening bracket X + 1 closing bracket + c = a times opening bracket X to the power 2 + 2 times X + 1 closing bracket + b times X + b + c = a times X to the power 2 + opening bracket 2 times a + b closing bracket times X + opening bracket a + b + c closing bracket

a times X to the power 2 + b times X + c = a times X to the power 2 + opening bracket 2 times a + b closing bracket times X + opening bracket a + b + c closing bracket

Let's use the standard basis for **Error** and make a matrix for T:

T(1) = 1 = 1 times 1 + 0 times X + 0 times opening bracket X to the power 2 closing bracket 

*Error**

*Error**


MatrixSymbol(Str('T'), Integer(1), Integer(13))

Integer(1) geometric multiplicity = 1, algebraic multiplicity  = 3

B. **Error**

C. Not diagonalizable since **Error**

D. Not diagonalizable so can't find.


 §.§ 3.

A.T = Matrix([[1, 1, 0, 0, 2, 0, 0, 0, 0, 10, 0, -1, 0]])

B. [Integer(2), Integer(1)] geometric multiplicity = 4 algebraic multiplicity = 2

C. Not diagonalizable since there are some complex eigenvalues but aren't included.

D. Not diagonalizable so can't find.



 §.§ 4.

A.MutableDenseMatrix([[Integer(1), Integer(-1), Integer(0), Integer(0), Integer(2), Integer(0), Integer(0), Integer(0), Integer(0), Integer(-10), Integer(0), Integer(1), Integer(0)]])

B.['-1 times i', Symbol('i')]  geometric multiplicity = 2 algebraic multiplicity = 2

C. Diagonalizable since g times E times o = a times l times g

D. **Error**


§ QUESTION 2



 §.§ 1.

Suppose there is an arbitrary vector **Error** such that **Error** and **Error** 

(v is contained in the eigenspace of Symbol('lambda_1') and Symbol('lambda_2')), then we know that 
*Error** and **Error** by Definition 14.5. By combining these equations through Function('T')(Symbol('v')), we get:

lambda_1 times v = lambda_2 times v. 

Rearranging, we get:

lambda_2 times v minus lambda_1 times v = 0. 

We know that the eigenvalues Symbol('lambda_1') and Symbol('lambda_2') are 2 numbers that are distinct, thus **Error**. So we must have Integer(0). Hence, the only vector contained in Symbol('T_
lambda_1') and Symbol('T_
lambda_2') is the zero vector.


 §.§ 2.

We want to show the set [Symbol('v_1'), 's times o times m times E times t times h times i times n times g', Symbol('v_r'), Symbol('w_1'), 's times o times m times E times t times h times i times n times g', Symbol('w_s')] is linearly independent. Let's show the only solution: 
 c_1 times v_1 + s times o times m times E times t times h times i times n times g + c_r times v_r + d_1 times w_1 + s times o times m times E times t times h times i times n times g + d_s times w_s = 0 is when s times o times m times E times t times h times i times n times g = c_r = d_1 = s times o times m times E times t times h times i times n times g = d_s = 0.

We know **Error** = lambda_1 times v_r since [Symbol('v_1'), 's times o times m times E times t times h times i times n times g', Symbol('v_r')] is a subset of Symbol('T_
lambda_1').

We know **Error** = lambda_2 times w_s since [Symbol('w_1'), 's times o times m times E times t times h times i times n times g', Symbol('w_s')] is a subset of Symbol('T_
lambda_2').

Equation 1: take 0 = T(0) = T(c_1 times v_1 + s times o times m times E times t times h times i times n times g + c_r times v_r + d_1 times w_1 + s times o times m times E times t times h times i times n times g + d_s times w_s) 
 = lambda_1 times c_1 times v_1 + s times o times m times E times t times h times i times n times g + lambda_1 times c_r times v_r + lambda_2 times d_1 times w_1 + s times o times m times E times t times h times i times n times g + lambda_2 times d_s times w_s = 0. 

Equation 2: take the original equation and multiply by Symbol('lambda_1'): lambda_1 times c_1 times v_1 + s times o times m times E times t times h times i times n times g + lambda_1 times c_r times v_r + lambda_1 times d_1 times w_1 + s times o times m times E times t times h times i times n times g + lambda_1 times d_s times w_s = 0.

Subtract Equation 1 - Equation 2 (all v terms cancel): (lambda_2 + -1 times lambda_1)d_1 times w_1 + ... + (lambda_2 + -1 times lambda_1)d_s times w_s = 0.

*Error** = 0.

We know from part 1 that **Error**, so opening bracket d_1 times w_1 + s times o times m times E times t times h times i times n times g + d_s times w_s closing bracket = 0. [Symbol('w_1'), 's times o times m times E times t times h times i times n times g', Symbol('w_s')] is linearly independent, thus by definition s times o times m times E times t times h times i times n times g = d_s = 0. 

We can use the same method with [Symbol('c_1'), 's times o times m times E times t times h times i times n times g', Symbol('c_r')] by modifying Equation 2 to multiply by Symbol('lambda_2'):

lambda_2 times c_1 times v_1 + s times o times m times E times t times h times i times n times g + lambda_2 times c_r times v_r + lambda_2 times d_1 times w_1 + s times o times m times E times t times h times i times n times g + lambda_2 times d_s times w_s = 0.

Subtract Equation 2 - Equation 1 (all w terms cancel): (lambda_2 + -1 times lambda_1)c_1 times v_1 + ... + (lambda_2 + -1 times lambda_1)c_r times v_r = 0.

*Error** = 0.

We know from part 1 that **Error**, so opening bracket c_1 times v_1 + s times o times m times E times t times h times i times n times g + c_r times v_r closing bracket = 0. [Symbol('v_1'), 's times o times m times E times t times h times i times n times g', Symbol('v_r')] is linearly independent, thus by definition s times o times m times E times t times h times i times n times g = c_r = 0. 

We proved that s times o times m times E times t times h times i times n times g = c_r = d_1 = s times o times m times E times t times h times i times n times g = d_s = 0. Thus  [Symbol('v_1'), 's times o times m times E times t times h times i times n times g', Symbol('v_r'), Symbol('w_1'), 's times o times m times E times t times h times i times n times g', Symbol('w_s')] is a linearly independent subset of V.


§ QUESTION 3

By Definition 14.5, we know the geometric multiplicity of Symbol('lambda') is the dimension of eigenspace Symbol('T_
lambda'). If the eigenspace agrees with range(T), that must mean geometric multiplicity Symbol('lambda') = dim(T), which by definition means there can be no other eigenvalues. Hence, Symbol('lambda') is the only eigenvalue. By Theorem 15.3, the sum of geometric multiplities is just Symbol('lambda'), which is dim(T), so therefore T is diagonalizable.

Proof by intimidation.


